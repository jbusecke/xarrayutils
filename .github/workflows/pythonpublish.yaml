name: Build and Upload xarrayutils to PyPI
on:
  release:
    types:
      - published #this will be triggered by any kind of release. Pre releases are uploaded to testpypi and real releases to pypi

jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    if: github.repository == 'jbusecke/xarrayutils'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools setuptools-scm[toml] wheel twine
      - name: Check python version
        run: |
          python --version
      - name: Check current package version
        run: |
          python setup.py --version
      - name: Build tarball and wheels
        run: |
          git clean -xdf
          git restore -SW .
          python setup.py sdist bdist_wheel
      - name: Check built artifacts
        run: |
          python -m twine check dist/*
          pwd
          if [ -f dist/xarrayutils-0.0.0.tar.gz ]; then
            echo "❌ INVALID VERSION NUMBER"
            exit 1
          else
            echo "✅ Looks good"
          fi
      - uses: actions/upload-artifact@v2
        with:
          name: releases
          path: dist

  test-built-dist:
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: 3.8
      - uses: actions/download-artifact@v2
        with:
          name: releases
          path: dist
      - name: List contents of built dist
        run: |
          ls -ltrh
          ls -ltrh dist
  upload-to-testpypi:
    needs: test-built-dist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: releases
          path: dist
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          repository_url: https://test.pypi.org/legacy/
          password: ${{ secrets.TESTPYPI_TOKEN }}
          verbose: true
  upload-to-pypi:
    needs: upload-to-testpypi
    if: "!github.event.release.prerelease"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: releases
          path: dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          verbose: true
  check-version-testpypi:
      needs: upload-to-testpypi
      runs-on: ubuntu-latest
      steps:
        - name: Check uploaded testpypi package
          run: |
            sleep 30
            python -m pip install --upgrade pip
            pip cache purge
            # This is kind of stupid, but the only way I got this to work with the latest versions on testpypi
            # If I used: python -m pip install --extra-index-url https://test.pypi.org/simple --upgrade xarrayutils
            # It would grab an older cmip6_pp version and with `--index-url=...` I cant get the proper dependencies from pypi
            # So I am installing the dependencies manually from pypi and the newest version from testpypi...not sure if this
            # defeats the purpose, but I am frankly fed up with this shit!
            python -m pip install xarray dask numpy scipy
            python -m pip install --index-url https://test.pypi.org/simple --upgrade xarrayutils --pre
            python -c "import xarrayutils;print(xarrayutils.__version__)"
  check-version-pypi:
    needs: upload-to-pypi
    runs-on: ubuntu-latest
    steps:
      - name: Check uploaded pypi package
        run: |
          sleep 30
          python -m pip install --upgrade pip
          pip cache purge
          python -m pip install xarray dask numpy scipy #I thought this should happen automatically? I must still be packaging something wrong...
          python -m pip install --upgrade xarrayutils --pre
          python -c "import xarrayutils;print(xarrayutils.__version__)"
        
